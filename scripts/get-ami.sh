#!/usr/bin/env bash
#
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ROOT_DIR=$(dirname $DIR)
BUILD=${BUILD:-$ROOT_DIR/build}                          # hvm/paravirtual - note: t1.micro supports only paravirtual type
AMIS_JSON="${BUILD}/tf-amis.json"

# Default Environment variables
AWS_PROFILE="${AWS_PROFILE:-mycluster}"             # aws profile
AMI_NAME_PREFIX="${AMI_NAME_PREFIX:-RHEL-7.1}"      # ami name prefix
VM_TYPE=${VM_TYPE:-hvm} 

# Get options from the command line
while getopts ":p:i:t:f" OPTION
do
    case $OPTION in
        p)
          AWS_PROFILE=$OPTARG
          ;;
        i)
          AMI_NAME_PREFIX=$OPTARG
          ;;
        t)
          VM_TYPE=$OPTARG
          ;;
        *)
          echo "Usage: $(basename $0) [-p <ami-name-prefix>] [-i <ami-name-prefix>] [-t <hvm|paravirtual>]"
          echo "Example: $(basename $0) -p mycluster -i RHEL-7.1 -t hvm"
          exit 0
          ;;
    esac
done

if [ $UPDATE ] || [ ! -f ${AMIS_JSON} ] || [ ! -s ${AMIS_JSON} ]; then
# get all amis descriptions
read -r -d '' FILTER <<EOF
[
  {
    "Name": "state",
    "Values": ["available"]
  },
  {
    "Name": "virtualization-type",
    "Values": ["${VM_TYPE}"]
  },
  {
    "Name": "image-type",
    "Values": ["machine"]
  }
]
EOF
aws --profile $AWS_PROFILE ec2 describe-images --filter "$FILTER" > ${AMIS_JSON}
fi

# Set the jq filter for the lastest avaiable ami that matches the given prefix and vm-type
read -r -d '' JQ_FILTER <<EOF
.Images
 | map(select(( .Name != null) and ( .Name | startswith("${AMI_NAME_PREFIX}"))))
 | .[length -1]
EOF

# Get the AMI id
ami=$( jq "$JQ_FILTER" ${AMIS_JSON} )
ami_id=$(echo $ami | jq --raw-output '.ImageId')
if [ "$ami_id" = "null" ] || [ -z "$ami_id" ]; then
  echo Error: Faild to get AMI ID with prefix=$AMI_NAME_PREFIX and vm_time=$VM_TYPE, $ami_id
  exit 1
fi
ami_name=$(echo $ami | jq --raw-output '.Name')
ami_desc=$(echo $ami | jq --raw-output '.Description')

cat <<EOF
# Generated by scripts/get-ami.sh
# AMI: $ami_name, $ami_desc
variable "ami" {
  default = "$ami_id"
}
EOF